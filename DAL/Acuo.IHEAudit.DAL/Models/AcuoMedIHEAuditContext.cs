// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Acuo.IHEAudit.DAL.Models.Configurations;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
#nullable disable

namespace Acuo.IHEAudit.DAL.Models;

public partial class AcuoMedIHEAuditContext : DbContext
{
    public AcuoMedIHEAuditContext(DbContextOptions<AcuoMedIHEAuditContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TAcuoAudit> TAcuoAudits { get; set; }

    public virtual DbSet<TConfig> TConfigs { get; set; }

    public virtual DbSet<TEvent> TEvents { get; set; }

    public virtual DbSet<TIheAudit> TIheAudits { get; set; }

    public virtual DbSet<TSyslog> TSyslogs { get; set; }

    public virtual DbSet<TTask> TTasks { get; set; }

    public virtual DbSet<TUpgradeBitmask> TUpgradeBitmasks { get; set; }

    public virtual DbSet<TUpgradeDetail> TUpgradeDetails { get; set; }

    public virtual DbSet<TUpgradeHistory> TUpgradeHistories { get; set; }

    public virtual DbSet<TUserAudit> TUserAudits { get; set; }

    public virtual DbSet<TVersionVer> TVersionVers { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.TAcuoAuditConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TConfigConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TEventConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TIheAuditConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TSyslogConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TTaskConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TUpgradeBitmaskConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TUpgradeDetailConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TUpgradeHistoryConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TUserAuditConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TVersionVerConfiguration());

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
