// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Acuo.IHEAudit.DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Acuo.IHEAudit.DAL.Models.Configurations
{
    public partial class TAcuoAuditConfiguration : IEntityTypeConfiguration<TAcuoAudit>
    {
        public void Configure(EntityTypeBuilder<TAcuoAudit> entity)
        {
            entity.HasKey(e => e.AlId).HasName("PK_T_ACUO_AUDIT__Id");

            entity.ToTable("T_ACUO_AUDIT");

            entity.HasIndex(e => new { e.AlAuditDate, e.AlEventType, e.AlAcuostoreServerName }, "IX_T_ACUO_AUDIT__AuditDate_EventType_ServerName").HasFillFactor(100);

            entity.Property(e => e.AlId).HasColumnName("AL_ID");
            entity.Property(e => e.AlAccessionNumber)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_ACCESSION_NUMBER");
            entity.Property(e => e.AlAcuostoreApplicationName)
                .HasMaxLength(64)
                .IsUnicode(false)
                .HasColumnName("AL_ACUOSTORE_APPLICATION_NAME");
            entity.Property(e => e.AlAcuostoreServerName)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("AL_ACUOSTORE_SERVER_NAME");
            entity.Property(e => e.AlAcuostoreUserName)
                .HasMaxLength(64)
                .IsUnicode(false)
                .HasColumnName("AL_ACUOSTORE_USER_NAME");
            entity.Property(e => e.AlAcuostoreUserPassword)
                .HasMaxLength(64)
                .IsUnicode(false)
                .HasColumnName("AL_ACUOSTORE_USER_PASSWORD");
            entity.Property(e => e.AlAuditDate)
                .HasColumnType("datetime")
                .HasColumnName("AL_AUDIT_DATE");
            entity.Property(e => e.AlComment)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("AL_COMMENT");
            entity.Property(e => e.AlDatabase)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_DATABASE");
            entity.Property(e => e.AlDeletionSetId)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("AL_DELETION_SET_ID");
            entity.Property(e => e.AlEventType)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("AL_EVENT_TYPE");
            entity.Property(e => e.AlFileName)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("AL_FILE_NAME");
            entity.Property(e => e.AlIheId).HasColumnName("AL_IHE_ID");
            entity.Property(e => e.AlImSopinstanceUid)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_IM_SOPINSTANCE_UID");
            entity.Property(e => e.AlImageGuid)
                .HasMaxLength(16)
                .IsFixedLength()
                .HasColumnName("AL_IMAGE_GUID");
            entity.Property(e => e.AlMachine)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_MACHINE");
            entity.Property(e => e.AlPtId)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_PT_ID");
            entity.Property(e => e.AlPtName)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_PT_NAME");
            entity.Property(e => e.AlRecycleBinFolder)
                .HasMaxLength(16)
                .IsFixedLength()
                .HasColumnName("AL_RECYCLE_BIN_FOLDER");
            entity.Property(e => e.AlRestore).HasColumnName("AL_RESTORE");
            entity.Property(e => e.AlRestoredAeName)
                .HasMaxLength(17)
                .IsUnicode(false)
                .HasColumnName("AL_RESTORED_AE_NAME");
            entity.Property(e => e.AlRestoredLastDate)
                .HasColumnType("datetime")
                .HasColumnName("AL_RESTORED_LAST_DATE");
            entity.Property(e => e.AlRestoredPort).HasColumnName("AL_RESTORED_PORT");
            entity.Property(e => e.AlRestoredServer)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("AL_RESTORED_SERVER");
            entity.Property(e => e.AlSeDicomUid)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_SE_DICOM_UID");
            entity.Property(e => e.AlSeModality)
                .HasMaxLength(17)
                .IsUnicode(false)
                .HasColumnName("AL_SE_MODALITY");
            entity.Property(e => e.AlSource)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_SOURCE");
            entity.Property(e => e.AlStDicomUid)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_ST_DICOM_UID");
            entity.Property(e => e.AlUser)
                .HasMaxLength(65)
                .IsUnicode(false)
                .HasColumnName("AL_USER");
            entity.Property(e => e.AlVerifiedForDeletion).HasColumnName("AL_VERIFIED_FOR_DELETION");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TAcuoAudit> entity);
    }
}
